<!--
Этот файл — часть StorylineEditor.

StorylineEditor — свободная программа: вы можете перераспространять ее и/или изменять ее на условиях Стандартной общественной лицензии GNU в том виде, 
в каком она была опубликована Фондом свободного программного обеспечения; либо версии 3 лицензии, либо (по вашему выбору) любой более поздней версии.

StorylineEditor распространяется в надежде, что она будет полезной, но БЕЗО ВСЯКИХ ГАРАНТИЙ; даже без неявной гарантии ТОВАРНОГО ВИДА или ПРИГОДНОСТИ ДЛЯ 
ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Подробнее см. в Стандартной общественной лицензии GNU.

Вы должны были получить копию Стандартной общественной лицензии GNU вместе с этой программой. Если это не так, см. <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:StorylineEditor.ViewModel;assembly=StorylineEditor.ViewModel"
                    xmlns:vmg="clr-namespace:StorylineEditor.ViewModel.Graphs;assembly=StorylineEditor.ViewModel"
                    xmlns:vmn="clr-namespace:StorylineEditor.ViewModel.Nodes;assembly=StorylineEditor.ViewModel"
                    xmlns:vmp="clr-namespace:StorylineEditor.ViewModel.Predicates;assembly=StorylineEditor.ViewModel"
                    xmlns:vmge="clr-namespace:StorylineEditor.ViewModel.GameEvents;assembly=StorylineEditor.ViewModel"
                    xmlns:m="clr-namespace:StorylineEditor.Model;assembly=StorylineEditor.Model"
                    xmlns:mn="clr-namespace:StorylineEditor.Model.Nodes;assembly=StorylineEditor.Model"
                    xmlns:mp="clr-namespace:StorylineEditor.Model.Predicates;assembly=StorylineEditor.Model"
                    xmlns:mge="clr-namespace:StorylineEditor.Model.GameEvents;assembly=StorylineEditor.Model"
                    xmlns:mg="clr-namespace:StorylineEditor.Model.Graphs;assembly=StorylineEditor.Model"
                    xmlns:bhvrs="clr-namespace:StorylineEditor.App.Behaviors"
                    xmlns:controls="clr-namespace:StorylineEditor.App.Controls" xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- COLLECTION CONTEXT (FOLDERS AND PATH) -->
    
    <ControlTemplate TargetType="Button" x:Key="CT_Button_Path">
        <Border x:Name="br_Main" Margin="{StaticResource Thickness_Margin_1x}" Background="{StaticResource Color_HitVisible}" 
                    BorderBrush="{StaticResource Color_HitVisible}" BorderThickness="{StaticResource Thickness_Margin_Underline_1x}" Cursor="Hand">
            <ContentPresenter></ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="br_Main" Property="BorderBrush" Value="{StaticResource Color_Path}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <!-- COLLECTION ITEMS -->

    <Style TargetType="Border" x:Key="S_Border_Selector">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Margin" Value="{StaticResource Thickness_Margin_1x}"></Setter>
        <Setter Property="CornerRadius" Value="{StaticResource CornerRadius_Common}"></Setter>
        <Setter Property="BorderThickness" Value="{StaticResource Thickness_Margin_2x}"></Setter>
        <Setter Property="Background" Value="{StaticResource Color_HitVisible}"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                <Setter Property="Background" Value="{StaticResource Color_Selection_Background}"></Setter>
                <Setter Property="BorderBrush" Value="{StaticResource Color_Selection_Border}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock}" x:Key="S_TextBlock_Selector_Cut">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Text" Value="{StaticResource String_Icon_Cut}"></Setter>
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=Self}, UpdateSourceTrigger=PropertyChanged}"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCut, UpdateSourceTrigger=PropertyChanged}" Value="false">
                <Setter Property="Visibility" Value="Hidden"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock}" x:Key="S_TextBlock_Selector_Icon">
        <Setter Property="MinWidth" Value="{StaticResource Double_Size_32x}"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSize_VeryLarge}"></Setter>
        <Setter Property="Margin" Value="{StaticResource Thickness_Margin_2x}"></Setter>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock}" x:Key="S_TextBlock_Selector_Icon_Mini">
        <Setter Property="MinWidth" Value="{StaticResource Double_Size_16x}"></Setter>
        <Setter Property="TextAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSize_Large}"></Setter>
        <Setter Property="Margin" Value="{StaticResource Thickness_Margin_2x}"></Setter>
    </Style>
    
    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock}" x:Key="S_TextBlock_Selector_Name">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock}" x:Key="S_TextBlock_Selector_Name_Mini">
        <Setter Property="FontSize" Value="{StaticResource FontSize_Small}"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <!-- MAIN MENU -->

    <ControlTemplate TargetType="Button" x:Key="CT_Button_TabMenu">
        <Border x:Name="br_Main" Margin="{StaticResource Thickness_Margin_1x}" Padding="{StaticResource Thickness_Padding_LeftRight}"
                                Background="{StaticResource Color_HitVisible}" BorderBrush="{StaticResource Color_HitVisible}" BorderThickness="{StaticResource Thickness_Margin_Underline_4x}" Cursor="Hand">
            <ContentPresenter></ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="br_Main" Property="BorderBrush" Value="{StaticResource Color_Selection_Border}"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="br_Main" Property="BorderBrush" Value="{StaticResource Color_Selection_Unselected}"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TextBox" BasedOn="{StaticResource S_TextBox}" x:Key="S_TextBox_Filter">
        <Setter Property="Margin" Value="{StaticResource Thickness_Margin_1x}"></Setter>
    </Style>



    <!-- Node -->

    <Style TargetType="Label" x:Key="S_Label_Node">
        <Setter Property="IsHitTestVisible" Value="False"></Setter>
    </Style>

    <Style TargetType="Label" x:Key="S_Label_Node_Large" BasedOn="{StaticResource S_Label_Node}">
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock}" x:Key="S_TextBlock_Node">
        <Setter Property="Margin" Value="{StaticResource Thickness_Margin_1x}"></Setter>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock_Node}" x:Key="S_TextBlock_Node_Header">
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock_Node}" x:Key="S_TextBlock_Node_Description"></Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock_Node}" x:Key="S_TextBlock_Node_ShortDescription">
        <Setter Property="FontWeight" Value="Bold"></Setter>
    </Style>
    
    <Style TargetType="TextBlock" BasedOn="{StaticResource S_TextBlock_Node}" x:Key="S_TextBlock_Node_Result">
        <Setter Property="FontStyle" Value="Italic"></Setter>
    </Style>

    <Style TargetType="Border" x:Key="S_Border_Node">
        <Setter Property="Padding" Value="{StaticResource Thickness_Margin_4x}"></Setter>
        <Setter Property="CornerRadius" Value="{StaticResource CornerRadius_Common}"></Setter>
        <Setter Property="BorderBrush" Value="{StaticResource Color_Selection_Unselected}"></Setter>
        <Setter Property="BorderThickness" Value="4"></Setter>
        <Setter Property="MinHeight" Value="{StaticResource Double_Node_MinHeight}"></Setter>
        <Setter Property="MinWidth" Value="{StaticResource Double_Node_MinWidth}"></Setter>
        <Setter Property="MaxWidth" Value="{StaticResource Double_Node_MaxWidth}"></Setter>
        <Setter Property="ToolTip" Value="{Binding Id, Mode=OneTime}"></Setter>
        <Setter Property="Background" Value="{StaticResource Color_Graph_Node_Background}"></Setter>
        <Setter Property="bhvrs:RenderSizeBehavior.ActualWidth" Value="{Binding Width, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"></Setter>
        <Setter Property="bhvrs:RenderSizeBehavior.ActualHeight" Value="{Binding Height, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"></Setter>
        <Setter Property="bhvrs:RenderSizeBehavior.IsEnabled" Value="true"></Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"></Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="{Binding Path=DataContext.Scale, RelativeSource={RelativeSource AncestorType=ItemsControl}, UpdateSourceTrigger=PropertyChanged}"
                                    ScaleY="{Binding Path=DataContext.Scale, RelativeSource={RelativeSource AncestorType=ItemsControl}, UpdateSourceTrigger=PropertyChanged}"></ScaleTransform>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource Color_Selection_Border}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Character.id}" Value="{x:Static m:CharacterM.PLAYER_ID}">
                <Setter Property="Background" Value="{StaticResource Color_Graph_Node_Background_Player}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="S_Button_Node_Gender" BasedOn="{StaticResource S_Button_Square_32x}">
        <Setter Property="Command" Value="{Binding ToggleGenderCommand}"></Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="{StaticResource Double_Size_24x-}" Y="{StaticResource Double_Size_24x-}"></TranslateTransform>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Gender, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static m:GENDER.UNSET}">
                <Setter Property="Content" Value="{StaticResource String_Icon_Gender_Unset}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Gender, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static m:GENDER.MALE}">
                <Setter Property="Content" Value="{StaticResource String_Icon_Gender_Male}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Gender, UpdateSourceTrigger=PropertyChanged}" Value="{x:Static m:GENDER.FEMALE}">
                <Setter Property="Content" Value="{StaticResource String_Icon_Gender_Female}"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="S_Button_Remove">
        <Setter Property="FontSize" Value="{StaticResource FontSize_VerySmall}"></Setter>
        <Setter Property="Width" Value="{StaticResource Double_Size_16x}"></Setter>
        <Setter Property="Height" Value="{StaticResource Double_Size_16x}"></Setter>
        <Setter Property="Content" Value="{StaticResource String_Icon_Remove}"></Setter>
        <Setter Property="Command" Value="{Binding Path=DataContext.RemoveElementCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"></Setter>
        <Setter Property="CommandParameter" Value="{Binding}"></Setter>
        <Setter Property="Foreground" Value="{StaticResource Color_Link_Foreground}"></Setter>
        <Setter Property="Background" Value="{StaticResource Color_Remove}"></Setter>
    </Style>

    <Style TargetType="Button" x:Key="S_Button_Node_Remove" BasedOn="{StaticResource S_Button_Remove}">
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="{StaticResource Double_Size_12x}" Y="{StaticResource Double_Size_12x-}"></TranslateTransform>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="IPT_WrapPanel">
        <WrapPanel Orientation="Horizontal"></WrapPanel>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="IPT_Canvas">
        <Canvas ClipToBounds="True"></Canvas>
    </ItemsPanelTemplate>
    
    <Style TargetType="ItemsControl" x:Key="S_Canvas_Graph">
        <Setter Property="Background" Value="{StaticResource Color_Graph_Background}"></Setter>
        <Setter Property="ItemsPanel" Value="{StaticResource IPT_Canvas}"></Setter>
        <Setter Property="ItemsSource" Value="{Binding ItemsVMs}"></Setter>
        <Setter Property="bhvrs:MouseExtBehavior.MouseEnterCommand" Value="{Binding RegisterContextCommand}"></Setter>
        <Setter Property="bhvrs:MouseExtBehavior.MouseLeaveCommand" Value="{Binding UnregisterContextCommand}"></Setter>
        <Setter Property="bhvrs:MouseExtBehavior.MouseRightButtonDownCommand" Value="{Binding DragCommand}"></Setter>
        <Setter Property="bhvrs:MouseExtBehavior.MouseLeftButtonDownCommand" Value="{Binding AddCommand}"></Setter>
        <Setter Property="bhvrs:MouseExtBehavior.MouseLeftButtonUpCommand" Value="{Binding LinkCommand}"></Setter>
        <Setter Property="bhvrs:MouseExtBehavior.MouseMoveCommand" Value="{Binding MoveCommand}"></Setter>
        <Setter Property="bhvrs:MouseExtBehavior.MouseWheelCommand" Value="{Binding ScaleCommand}"></Setter>
        <Setter Property="bhvrs:LoadUnloadExtBehavior.LoadedCommand" Value="{Binding InitCommand}"></Setter>
        <Setter Property="bhvrs:LoadUnloadExtBehavior.UnloadedCommand" Value="{Binding UnInitCommand}"></Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Canvas.ZIndex" Value="{Binding ZIndex, UpdateSourceTrigger=PropertyChanged}"/>
                    <Setter Property="Canvas.Left" Value="{Binding Left, UpdateSourceTrigger=PropertyChanged}"/>
                    <Setter Property="Canvas.Top" Value="{Binding Top, UpdateSourceTrigger=PropertyChanged}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsFilterPassed, UpdateSourceTrigger=PropertyChanged}" Value="false">
                            <Setter Property="Control.Visibility" Value="Collapsed"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Data Templates -->

    <DataTemplate DataType="{x:Type m:FolderM}">
        <Button VerticalAlignment="Center" Template="{StaticResource CT_Button_Path}" Command="{Binding Path=DataContext.SetContextCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}">
            <TextBlock Foreground="{StaticResource Color_Path}" FontSize="{StaticResource FontSize_Small}"><Run Text="{Binding name}"></Run><Run Text="/"></Run></TextBlock>
        </Button>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:StorylineVM}" x:Key="DT_StorylineVM_Tabs">
        <StackPanel Orientation="Horizontal">
            <Button Template="{StaticResource CT_Button_TabMenu}" Command="{Binding CharactersTabCommand}" Content="{StaticResource String_Tag_MainMenu_Characters}"></Button>
            <Button Template="{StaticResource CT_Button_TabMenu}" Command="{Binding ItemsTabCommand}" Content="{StaticResource String_Tag_MainMenu_Items}"></Button>
            <Button Template="{StaticResource CT_Button_TabMenu}" Command="{Binding ActorsTabCommand}" Content="{StaticResource String_Tag_MainMenu_Actors}"></Button>
            <Button Template="{StaticResource CT_Button_TabMenu}" Command="{Binding JournalTabCommand}" Content="{StaticResource String_Tag_MainMenu_Journal}"></Button>
            <Button Template="{StaticResource CT_Button_TabMenu}" Command="{Binding DialogsTabCommand}" Content="{StaticResource String_Tag_MainMenu_Dialogs}"></Button>
            <Button Template="{StaticResource CT_Button_TabMenu}" Command="{Binding ReplicasTabCommand}" Content="{StaticResource String_Tag_MainMenu_Replicas}"></Button>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:StorylineVM}" x:Key="DT_StorylineVM_Selection">
        <ContentControl Content="{Binding Selection, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:CollectionVM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="5*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <StackPanel Margin="{StaticResource Thickness_Margin_1x}" Orientation="Horizontal">
                    <Button Background="{StaticResource Color_Add}" Foreground="{StaticResource Color_Link_Foreground}" Content="{StaticResource String_Icon_Add}" ToolTip="{StaticResource String_TabMenu_Add_Tooltip}" Style="{StaticResource S_Button_Square_24x}" Command="{Binding AddCommand}" CommandParameter="{StaticResource False}"></Button>
                    <Button Background="{StaticResource Color_AddFolder}" Foreground="{StaticResource Color_Link_Foreground}" Content="{StaticResource String_Icon_Add}" ToolTip="{StaticResource String_TabMenu_AddFolder_Tooltip}" Style="{StaticResource S_Button_Square_24x}" Command="{Binding AddCommand}" CommandParameter="{StaticResource True}"></Button>
                    <Button Background="{StaticResource Color_Remove}" Foreground="{StaticResource Color_Link_Foreground}" Content="{StaticResource String_Icon_Remove}" ToolTip="{StaticResource String_TabMenu_Remove_Tooltip}" Style="{StaticResource S_Button_Square_24x}" Command="{Binding RemoveCommand}"></Button>

                    <Button Content="{StaticResource String_Icon_Cut}" ToolTip="{StaticResource String_TabMenu_Cut_Tooltip}" Style="{StaticResource S_Button_Square_24x}" Command="{Binding CutCommand}"></Button>
                    <Button Content="{StaticResource String_Icon_Paste}" ToolTip="{StaticResource String_TabMenu_Paste_Tooltip}" Style="{StaticResource S_Button_Square_24x}" Command="{Binding PasteCommand}"></Button>
                </StackPanel>

                <ItemsControl BorderBrush="{StaticResource Color_Path}" BorderThickness="{StaticResource Thickness_Margin_1x}" Margin="{StaticResource Thickness_Margin_1x}" Grid.Row="1" ItemsPanel="{StaticResource IPT_WrapPanel}" ItemsSource="{Binding Context}"></ItemsControl>

                <ScrollViewer Margin="{StaticResource Thickness_Margin_1x}" Grid.Row="2" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ItemsControl ItemsSource="{Binding ItemsVMs}">
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFilterPassed, UpdateSourceTrigger=PropertyChanged}" Value="false">
                                        <Setter Property="Control.Visibility" Value="Collapsed"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>

            <GridSplitter Grid.Column="1"></GridSplitter>

            <ContentControl Grid.Column="2" Content="{Binding SelectionEditor, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:FolderVM}">
        <Border x:Name="br_Main" Style="{StaticResource S_Border_Selector}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftDoubleClick" Command="{Binding Path=DataContext.SetContextCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}"
                                  CommandParameter="{Binding Model}"/>
                <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
            </Border.InputBindings>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="🗀" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource S_TextBlock_Selector_Cut}"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:FolderEditorVM}">
        <StackPanel Orientation="Vertical">
            <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_Name}"></TextBox>
            <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop_Multiline}" Tag="{StaticResource String_Tag_Description}"></TextBox>
        </StackPanel>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:CharacterVM}">
        <Border x:Name="br_Main" Style="{StaticResource S_Border_Selector}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
            </Border.InputBindings>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{StaticResource String_Icon_Character}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource S_TextBlock_Selector_Cut}"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type m:CharacterM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Character}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type m:ItemM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Item}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type m:ActorM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Actor}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mg:DialogM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Dialog}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mg:ReplicaM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Replica}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mg:QuestM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Quest}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mn:Node_TransitM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Node_Transit}" Style="{StaticResource S_TextBlock_Selector_Icon_Mini}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding id, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name_Mini}"></TextBlock>
        </Grid>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type mn:Node_RandomM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Node_Random}" Style="{StaticResource S_TextBlock_Selector_Icon_Mini}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding id, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name_Mini}"></TextBlock>
        </Grid>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type mn:Node_StepM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Node_Step}" Style="{StaticResource S_TextBlock_Selector_Icon_Mini}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name_Mini}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mn:Node_AlternativeM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Node_Alternative}" Style="{StaticResource S_TextBlock_Selector_Icon_Mini}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name_Mini}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mn:Node_ReplicaM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Node_Replica}" Style="{StaticResource S_TextBlock_Selector_Icon_Mini}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name_Mini}"></TextBlock>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type mn:Node_DialogM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{StaticResource String_Icon_Node_Dialog}" Style="{StaticResource S_TextBlock_Selector_Icon_Mini}"></TextBlock>
            <TextBlock Grid.Column="1" Text="{Binding name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name_Mini}"></TextBlock>
        </Grid>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:CharacterEditorVM}">
        <StackPanel Orientation="Vertical">
            <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_Name}"></TextBox>
            <CheckBox x:Name="cb_HasDescriptionFemale" IsChecked="{Binding HasDescriptionFemale, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_CheckBox_Prop}" Tag="{StaticResource String_Tag_HasDescriptionFemale}"></CheckBox>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition x:Name="cd_DescriptionFemale" Width="0"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox x:Name="gb_Description" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_Description}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_FlowDocument}">
                    <controls:RichTextBoxExt x:Name="rtb_FlowDocument" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding DescriptionFlow, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding DocumentChangedFlag, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
                <GroupBox Grid.Column="1" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_DescriptionFemale}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_FlowDocumentFemale}">
                    <controls:RichTextBoxExt x:Name="rtb_FlowDocumentFemale" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding DescriptionFlowFemale, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding DocumentChangedFlagFemale, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
            </Grid>
            <TextBox Text="{Binding ActorName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_ActorName}"></TextBox>
            <TextBox Text="{Binding ClassPathName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_ClassPathName}"></TextBox>

            <StackPanel Orientation="Horizontal" Margin="{StaticResource Thickness_Margin_1x}">
                <ContentControl ContentTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop}" Content="{TemplateBinding Tag}"></ContentControl>
                <controls:NumericUpDown_Float Margin="{StaticResource Thickness_Margin_1x}" VerticalAlignment="Center" Value="{Binding InitialRelation,UpdateSourceTrigger=PropertyChanged}"
                                            ButtonIncStyle="{StaticResource S_Button_Square_Auto}" ButtonIncContent="{StaticResource String_Icon_Plus}"
                                            ButtonDecStyle="{StaticResource S_Button_Square_Auto}" ButtonDecContent="{StaticResource String_Icon_Minus}"
                                            MinValue="-10" MaxValue="10" Step="0.25" MinWidth="{StaticResource Double_Node_MinWidth}"></controls:NumericUpDown_Float>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="{StaticResource Thickness_Margin_1x}">
                <ContentControl ContentTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop}" Content="{TemplateBinding Tag}"></ContentControl>
                <controls:NumericUpDown_Float Margin="{StaticResource Thickness_Margin_1x}" VerticalAlignment="Center" Value="{Binding InitialRelationFemale,UpdateSourceTrigger=PropertyChanged}"
                                            ButtonIncStyle="{StaticResource S_Button_Square_Auto}" ButtonIncContent="{StaticResource String_Icon_Plus}"
                                            ButtonDecStyle="{StaticResource S_Button_Square_Auto}" ButtonDecContent="{StaticResource String_Icon_Minus}"
                                            MinValue="-10" MaxValue="10" Step="0.25" MinWidth="{StaticResource Double_Node_MinWidth}"></controls:NumericUpDown_Float>
            </StackPanel>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cb_HasDescriptionFemale" Property="IsChecked" Value="true">
                <Setter TargetName="gb_Description" Property="Header" Value="{StaticResource String_Tag_DescriptionMale}"></Setter>
                <Setter TargetName="cd_DescriptionFemale" Property="Width" Value="*"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ActorVM}">
        <Border x:Name="br_Main" Style="{StaticResource S_Border_Selector}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
            </Border.InputBindings>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{StaticResource String_Icon_Actor}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource S_TextBlock_Selector_Cut}"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ActorEditorVM}">
        <StackPanel Orientation="Vertical">
            <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_Name}"></TextBox>
            <CheckBox x:Name="cb_HasDescriptionFemale" IsChecked="{Binding HasDescriptionFemale, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_CheckBox_Prop}" Tag="{StaticResource String_Tag_HasDescriptionFemale}"></CheckBox>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition x:Name="cd_DescriptionFemale" Width="0"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox x:Name="gb_Description" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_Description}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_FlowDocument}">
                    <controls:RichTextBoxExt x:Name="rtb_FlowDocument" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding DescriptionFlow, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding DocumentChangedFlag, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
                <GroupBox Grid.Column="1" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_DescriptionFemale}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_FlowDocumentFemale}">
                    <controls:RichTextBoxExt x:Name="rtb_FlowDocumentFemale" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding DescriptionFlowFemale, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding DocumentChangedFlagFemale, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
            </Grid>
            <TextBox Text="{Binding ActorName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_ActorName}"></TextBox>
            <TextBox Text="{Binding ClassPathName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_ClassPathName}"></TextBox>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cb_HasDescriptionFemale" Property="IsChecked" Value="true">
                <Setter TargetName="gb_Description" Property="Header" Value="{StaticResource String_Tag_DescriptionMale}"></Setter>
                <Setter TargetName="cd_DescriptionFemale" Property="Width" Value="*"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ItemVM}">
        <Border x:Name="br_Main" Style="{StaticResource S_Border_Selector}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
            </Border.InputBindings>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{StaticResource String_Icon_Item}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource S_TextBlock_Selector_Cut}"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:ItemEditorVM}">
        <StackPanel Orientation="Vertical">
            <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_Name}"></TextBox>
            <CheckBox x:Name="cb_HasDescriptionFemale" IsChecked="{Binding HasDescriptionFemale, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_CheckBox_Prop}" Tag="{StaticResource String_Tag_HasDescriptionFemale}"></CheckBox>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition x:Name="cd_DescriptionFemale" Width="0"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox x:Name="gb_Description" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_Description}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_FlowDocument}">
                    <controls:RichTextBoxExt x:Name="rtb_FlowDocument" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding DescriptionFlow, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding DocumentChangedFlag, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
                <GroupBox Grid.Column="1" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_DescriptionFemale}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_FlowDocumentFemale}">
                    <controls:RichTextBoxExt x:Name="rtb_FlowDocumentFemale" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding DescriptionFlowFemale, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding DocumentChangedFlagFemale, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
            </Grid>

            <CheckBox x:Name="cb_HasInternalDescription" IsChecked="{Binding HasInternalDescription, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_CheckBox_Prop}" Tag="{StaticResource String_Tag_HasInternalDescription}"></CheckBox>
            <CheckBox x:Name="cb_HasInternalDescriptionFemale" IsChecked="{Binding HasInternalDescriptionFemale, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_CheckBox_Prop}" Tag="{StaticResource String_Tag_HasInternalDescriptionFemale}"></CheckBox>
            <Grid x:Name="gr_InternalDescription">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition x:Name="cd_InternalDescriptionFemale" Width="0"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <GroupBox x:Name="gb_InternalDescription" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_InternalDescription}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_InternalFlowDocument}">
                    <controls:RichTextBoxExt x:Name="rtb_InternalFlowDocument" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding InternalDescriptionFlow, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding InternalDocumentChangedFlag, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
                <GroupBox Grid.Column="1" Style="{StaticResource S_GroupBox_Prop}" Header="{StaticResource String_Tag_InternalDescriptionFemale}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop_Rich}" Tag="{Binding ElementName=rtb_InternalFlowDocumentFemale}">
                    <controls:RichTextBoxExt x:Name="rtb_InternalFlowDocumentFemale" MinHeight="{StaticResource Double_Node_MinHeight}"
                                                 BindableDocument="{Binding InternalDescriptionFlowFemale, UpdateSourceTrigger=PropertyChanged}"
                                                 DocumentChangedFlag="{Binding InternalDocumentChangedFlagFemale, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"></controls:RichTextBoxExt>
                </GroupBox>
            </Grid>

            <TextBox Text="{Binding ActorName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_ActorName}"></TextBox>
            <TextBox Text="{Binding ClassPathName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_ClassPathName}"></TextBox>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cb_HasDescriptionFemale" Property="IsChecked" Value="true">
                <Setter TargetName="gb_Description" Property="Header" Value="{StaticResource String_Tag_DescriptionMale}"></Setter>
                <Setter TargetName="cd_DescriptionFemale" Property="Width" Value="*"></Setter>
            </Trigger>
            <Trigger SourceName="cb_HasInternalDescription" Property="IsChecked" Value="false">
                <Setter TargetName="cb_HasInternalDescriptionFemale" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="gr_InternalDescription" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
            <Trigger SourceName="cb_HasInternalDescriptionFemale" Property="IsChecked" Value="true">
                <Setter TargetName="gb_InternalDescription" Property="Header" Value="{StaticResource String_Tag_InternalDescriptionMale}"></Setter>
                <Setter TargetName="cd_InternalDescriptionFemale" Property="Width" Value="*"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmg:QuestVM}">
        <Border x:Name="br_Main" Style="{StaticResource S_Border_Selector}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
            </Border.InputBindings>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{StaticResource String_Icon_Quest}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource S_TextBlock_Selector_Cut}"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <ControlTemplate TargetType="ContentControl" x:Key="CT_ContentControl_NodePosition">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="{StaticResource Double_TextBox_Graph_MinWidth}" Width="*"></ColumnDefinition>
                <ColumnDefinition MinWidth="{StaticResource Double_TextBox_Graph_MinWidth}" Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" x:Name="tb_SelectionNodePositionX" Style="{StaticResource S_TextBox_Graph}" Text="{Binding SelectionNode.PositionX, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}" ></TextBox>
            <TextBox Grid.Column="1" x:Name="tb_SelectionNodePositionY" Style="{StaticResource S_TextBox_Graph}" Text="{Binding SelectionNode.PositionY, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}" ></TextBox>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectionNode, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                <Setter TargetName="tb_SelectionNodePositionX" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="tb_SelectionNodePositionY" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <DataTemplate DataType="{x:Type vmg:QuestEditorVM}">
        <TabControl Padding="0" Margin="0">
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_View}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="7*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="3*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ItemsControl Style="{StaticResource S_Canvas_Graph}"
                                  bhvrs:RenderSizeBehavior.IsEnabled="true"
                                  bhvrs:RenderSizeBehavior.ActualWidth="{Binding Path=(vm:StorylineVM.ViewWidth), UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                                  bhvrs:RenderSizeBehavior.ActualHeight="{Binding Path=(vm:StorylineVM.ViewHeight), UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                                  bhvrs:RenderSizeBehavior.SizeChangedFlag="{Binding SizeChangedFlag, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}">
                    </ItemsControl>

                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="btn_selectable_Step" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Step}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_StepM}"></Button>
                            <Button x:Name="btn_selectable_Alternative" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Alternative}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_AlternativeM}"></Button>
                            <Rectangle Style="{StaticResource S_Rectangle_GraphMenu}"></Rectangle>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="⏪" Command="{Binding PrevRootNodeCommand}" ToolTip="{StaticResource String_GraphMenu_PrevRootNode_Tooltip}"></Button>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="⏩" Command="{Binding NextRootNodeCommand}" ToolTip="{StaticResource String_GraphMenu_NextRootNode_Tooltip}"></Button>
                            <Rectangle Style="{StaticResource S_Rectangle_GraphMenu}"></Rectangle>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Graph_Origin}" Command="{Binding GoToOriginCommand}" ToolTip="{StaticResource String_GraphMenu_GoToOrigin_Tooltip}"></Button>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Graph_Reset}" Command="{Binding ResetScaleCommand}" ToolTip="{StaticResource String_GraphMenu_ResetScale_Tooltip}"></Button>
                        </StackPanel>

                        <TextBlock Grid.Row="1" Style="{StaticResource S_TextBlock_Graph_Bold}" Margin="{StaticResource Thickness_Margin_2x}">
                            <Run x:Name="r_SelectedNodeType"></Run>
                            <Run Text="{Binding Scale, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></Run>
                            <Run Text="("></Run>
                            <Run Text="{Binding OffsetX, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}"></Run>
                            <Run Text=","></Run>
                            <Run Text="{Binding OffsetY, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}"></Run>
                            <Run Text=")"></Run>
                        </TextBlock>
                    </Grid>

                    <ContentControl Content="{Binding}" HorizontalAlignment="Right" VerticalAlignment="Top" Template="{StaticResource CT_ContentControl_NodePosition}"></ContentControl>

                    <GridSplitter Grid.Column="1"></GridSplitter>

                    <ContentControl Grid.Column="2" Content="{Binding SelectionEditor, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
                </Grid>
            </TabItem>
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_Props}">
                <StackPanel Orientation="Vertical">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_Name}"></TextBox>
                    <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop_Multiline}" Tag="{StaticResource String_Tag_Description}"></TextBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_Stats}"></TabItem>
        </TabControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_StepM}">
                <Setter TargetName="btn_selectable_Step" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Step_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_AlternativeM}">
                <Setter TargetName="btn_selectable_Alternative" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Alternative_Type}"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_Journal_StepVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <Label Content="{StaticResource String_Icon_Node_Step}" Style="{StaticResource S_Label_Node}"></Label>

                <TextBlock VerticalAlignment="Center" TextAlignment="Center" Grid.Column="1" Grid.Row="0" Style="{StaticResource S_TextBlock_Node_Header}" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <controls:TextBlockExt IsHitTestVisible="False" Grid.ColumnSpan="2" Grid.Row="1" Document="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource S_TextBlock_Node_Description}"></controls:TextBlockExt>

                <Separator Grid.ColumnSpan="2" Grid.Row="2"></Separator>
                
                <TextBlock Grid.ColumnSpan="2" Grid.Row="3" Style="{StaticResource S_TextBlock_Node_Result}" Text="{Binding Result, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_Journal_StepEditorVM}">
        <TabControl>
            <TabItem Header="{StaticResource String_Tag_Node_Tab_Props}">
                <Grid VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBox Style="{StaticResource S_TextBox_Prop}" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Step_Name}"></TextBox>
                    <TextBox Grid.Row="1" Style="{StaticResource S_TextBox_Prop_Rich}" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Step_Description}"></TextBox>
                    <TextBox Grid.Row="2" Style="{StaticResource S_TextBox_Prop_Multiline}" Text="{Binding Result, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Step_Result}"></TextBox>
                </Grid>
            </TabItem>
        </TabControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_Journal_AlternativeVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <Label Content="{StaticResource String_Icon_Node_Alternative}" Style="{StaticResource S_Label_Node}"></Label>

                <TextBlock VerticalAlignment="Center" TextAlignment="Center" Grid.Column="1" Grid.Row="0" Style="{StaticResource S_TextBlock_Node_Header}" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <controls:TextBlockExt IsHitTestVisible="False" Grid.ColumnSpan="2" Grid.Row="1" Document="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource S_TextBlock_Node_Description}"></controls:TextBlockExt>

                <Separator Grid.ColumnSpan="2" Grid.Row="2"></Separator>
                
                <TextBlock Grid.ColumnSpan="2" Grid.Row="3" Style="{StaticResource S_TextBlock_Node_Result}" Text="{Binding Result, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_Journal_AlternativeEditorVM}">
        <TabControl>
            <TabItem Header="{StaticResource String_Tag_Node_Tab_Props}">
                <Grid VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <TextBox Style="{StaticResource S_TextBox_Prop}" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Alternative_Name}"></TextBox>
                    <TextBox Grid.Row="1" Style="{StaticResource S_TextBox_Prop_Rich}" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Alternative_Description}"></TextBox>
                    <TextBox Grid.Row="2" Style="{StaticResource S_TextBox_Prop_Multiline}" Text="{Binding Result, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Alternative_Result}"></TextBox>
                </Grid>
            </TabItem>
        </TabControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_RandomVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="{StaticResource String_Icon_Node_Random}" Style="{StaticResource S_Label_Node_Large}"></Label>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
    </DataTemplate>

    <Style TargetType="TextBlock" x:Key="S_TextBlock_Predicate_Title" BasedOn="{StaticResource S_TextBlock}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="{x:Type mp:P_CompositeM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_CompositeM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Dialog_HasM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_HasM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Dialog_Node_Has_ActiveSession_CmpM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_ActiveSession_CmpM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Dialog_Node_Has_ActiveSessionM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_ActiveSessionM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Dialog_Node_Has_PrevSessions_CmpM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_PrevSessions_CmpM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Dialog_Node_Has_PrevSessionsM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_PrevSessionsM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Item_HasM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Item_HasM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Quest_AddedM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_AddedM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Quest_FinishedM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_FinishedM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Quest_Node_AddedM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_Node_AddedM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Quest_Node_PassedM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_Node_PassedM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mp:P_Relation_HasM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_Predicate_P_Relation_HasM_Title}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock" x:Key="S_TextBlock_GameEvent_Title" BasedOn="{StaticResource S_TextBlock}">
        <Style.Triggers>
            <Trigger Property="Tag" Value="{x:Type mge:GE_Item_DropM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Item_DropM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mge:GE_Item_PickUpM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Item_PickUpM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mge:GE_Quest_AddM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Quest_AddM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mge:GE_Quest_Node_AddM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Quest_Node_AddM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mge:GE_Quest_Node_PassM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Quest_Node_PassM_Title}"></Setter>
            </Trigger>
            <Trigger Property="Tag" Value="{x:Type mge:GE_Relation_ChangeM}">
                <Setter Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Relation_ChangeM_Title}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <DataTemplate x:Key="DT_ContentControl_Predicates">
        <ScrollViewer>
            <ItemsControl ItemsSource="{Binding Predicates}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{StaticResource Thickness_Margin_1x}"
                                CornerRadius="{StaticResource CornerRadius_Common}">
                            <Border.Margin>
                                <Thickness Left="{StaticResource Double_Margin_2x}" Right="{StaticResource Double_Margin_2x}"
                                           Top="{StaticResource Double_Margin_2x}" Bottom="{StaticResource Double_Size_8x}"></Thickness>
                            </Border.Margin>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock HorizontalAlignment="Center" Tag="{Binding PredicateType}" Style="{StaticResource S_TextBlock_Predicate_Title}"></TextBlock>
                                <ContentControl Grid.Row="1" Content="{Binding}"></ContentControl>
                                <Button Grid.RowSpan="2" Style="{StaticResource S_Button_Remove}" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="DT_ContentControl_GameEvents">
        <ScrollViewer>
            <ItemsControl ItemsSource="{Binding GameEvents}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Border BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{StaticResource Thickness_Margin_1x}"
                                CornerRadius="{StaticResource CornerRadius_Common}">
                            <Border.Margin>
                                <Thickness Left="{StaticResource Double_Margin_2x}" Right="{StaticResource Double_Margin_2x}"
                                           Top="{StaticResource Double_Margin_2x}" Bottom="{StaticResource Double_Size_8x}"></Thickness>
                            </Border.Margin>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock HorizontalAlignment="Center" Tag="{Binding GameEventType}" Style="{StaticResource S_TextBlock_GameEvent_Title}"></TextBlock>
                                <ContentControl Grid.Row="1" Content="{Binding}"></ContentControl>
                                <Button Grid.RowSpan="2" Style="{StaticResource S_Button_Remove}" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </DataTemplate>

    <DataTemplate x:Key="DT_ComboBoxItem_Predicate">
        <TextBlock x:Name="tb_Main"></TextBlock>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_CompositeM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_CompositeM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Dialog_HasM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_HasM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Dialog_Node_Has_ActiveSession_CmpM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_ActiveSession_CmpM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Dialog_Node_Has_ActiveSessionM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_ActiveSessionM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Dialog_Node_Has_PrevSessions_CmpM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_PrevSessions_CmpM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Dialog_Node_Has_PrevSessionsM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Dialog_Node_Has_PrevSessionsM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Item_HasM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Item_HasM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Quest_AddedM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_AddedM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Quest_FinishedM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_FinishedM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Quest_Node_AddedM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_Node_AddedM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Quest_Node_PassedM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Quest_Node_PassedM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mp:P_Relation_HasM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_Predicate_P_Relation_HasM_DisplayName}"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <DataTemplate x:Key="DT_ContentControl_PredicatesHeader">
        <controls:ComboBoxExt SelectedValue="{Binding SelectedPredicateType, UpdateSourceTrigger=PropertyChanged}"
                              Tag="{StaticResource String_Tag_Node_Tab_Predicates}"
                              Style="{StaticResource S_ComboBoxExt_Prop_Popup}" ItemTemplate="{StaticResource DT_ComboBoxItem_Predicate}">
            <system:Type>mp:P_CompositeM</system:Type>
            <system:Type>mp:P_Dialog_HasM</system:Type>
            <system:Type>mp:P_Dialog_Node_Has_ActiveSession_CmpM</system:Type>
            <system:Type>mp:P_Dialog_Node_Has_ActiveSessionM</system:Type>
            <system:Type>mp:P_Dialog_Node_Has_PrevSessions_CmpM</system:Type>
            <system:Type>mp:P_Dialog_Node_Has_PrevSessionsM</system:Type>
            <system:Type>mp:P_Item_HasM</system:Type>
            <system:Type>mp:P_Quest_AddedM</system:Type>
            <system:Type>mp:P_Quest_FinishedM</system:Type>
            <system:Type>mp:P_Quest_Node_AddedM</system:Type>
            <system:Type>mp:P_Quest_Node_PassedM</system:Type>
            <system:Type>mp:P_Relation_HasM</system:Type>
        </controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate x:Key="DT_ComboBoxItem_GameEvent">
        <TextBlock x:Name="tb_Main"></TextBlock>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Type mge:GE_Item_DropM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Item_DropM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mge:GE_Item_PickUpM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Item_PickUpM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mge:GE_Quest_AddM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Quest_AddM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mge:GE_Quest_Node_AddM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Quest_Node_AddM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mge:GE_Quest_Node_PassM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Quest_Node_PassM_DisplayName}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding}" Value="{x:Type mge:GE_Relation_ChangeM}">
                <Setter TargetName="tb_Main" Property="Text" Value="{StaticResource String_Tag_GameEvent_GE_Relation_ChangeM_DisplayName}"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <DataTemplate x:Key="DT_ContentControl_GameEventsHeader">
        <controls:ComboBoxExt SelectedValue="{Binding SelectedGameEventType, UpdateSourceTrigger=PropertyChanged}"
                              Tag="{StaticResource String_Tag_Node_Tab_GameEvents}"
                              Style="{StaticResource S_ComboBoxExt_Prop_Popup}"  ItemTemplate="{StaticResource DT_ComboBoxItem_GameEvent}">
            <system:Type>mge:GE_Item_DropM</system:Type>
            <system:Type>mge:GE_Item_PickUpM</system:Type>
            <system:Type>mge:GE_Quest_AddM</system:Type>
            <system:Type>mge:GE_Quest_Node_AddM</system:Type>
            <system:Type>mge:GE_Quest_Node_PassM</system:Type>
            <system:Type>mge:GE_Relation_ChangeM</system:Type>
        </controls:ComboBoxExt>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vmn:Node_RandomEditorVM}">
        <TabControl>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_Predicates}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_PredicatesHeader}" Header="{Binding}"></TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_GameEvents}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_GameEventsHeader}" Header="{Binding}"></TabItem>
        </TabControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_TransitVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="{StaticResource String_Icon_Node_Transit}" Style="{StaticResource S_Label_Node_Large}"></Label>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_TransitEditorVM}">
        <TabControl>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_Predicates}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_PredicatesHeader}" Header="{Binding}"></TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_GameEvents}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_GameEventsHeader}" Header="{Binding}"></TabItem>
        </TabControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_GateVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="{StaticResource String_Icon_Node_Gate}" Style="{StaticResource S_Label_Node_Large}"></Label>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_GateEditorVM}">
        <TabControl>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_Predicates}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_PredicatesHeader}" Header="{Binding}"></TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_GameEvents}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_GameEventsHeader}" Header="{Binding}"></TabItem>
        </TabControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_ExitVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Label VerticalAlignment="Center" HorizontalAlignment="Center" Content="{StaticResource String_Icon_Node_Exit}" Style="{StaticResource S_Label_Node_Large}"></Label>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_ExitEditorVM}">
        <TabControl>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_Predicates}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_PredicatesHeader}" Header="{Binding}"></TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_GameEvents}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_GameEventsHeader}" Header="{Binding}"></TabItem>
        </TabControl>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vmn:Node_ReplicaVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <Label Content="{StaticResource String_Icon_Node_Replica}" Style="{StaticResource S_Label_Node}"></Label>

                <TextBlock x:Name="tb_CharacterName" VerticalAlignment="Center" TextAlignment="Center" Grid.Column="1" Grid.Row="0" Style="{StaticResource S_TextBlock_Node_Header}" Text="{Binding Character.name, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"></TextBlock>
                <TextBlock x:Name="tb_OverrideName" VerticalAlignment="Center" TextAlignment="Center" Grid.Column="1" Grid.Row="0" Style="{StaticResource S_TextBlock_Node_Header}" Text="{Binding OverrideName, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <controls:TextBlockExt IsHitTestVisible="False" Grid.ColumnSpan="2" Grid.Row="1" Document="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource S_TextBlock_Node_Description}"></controls:TextBlockExt>

                <Separator Grid.ColumnSpan="2" Grid.Row="2"></Separator>
                
                <TextBlock Grid.ColumnSpan="2" Grid.Row="3" Style="{StaticResource S_TextBlock_Node_ShortDescription}" Text="{Binding ShortDescription, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <Trigger SourceName="tb_OverrideName" Property="Text" Value="">
                <Setter TargetName="tb_OverrideName" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="tb_CharacterName" Property="Visibility" Value="Visible"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_ReplicaEditorVM}">
        <TabControl>
            <TabItem Header="{StaticResource String_Tag_Node_Tab_Props}">
                <Grid VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <controls:ComboBoxExt SelectedValue="{Binding Character, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Node_Regular_Character}"
                                          ItemsSource="{Binding FilteredCharacterCVS.View}"
                                          Filter="{Binding CharacterFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
                    <TextBox Grid.Row="1" Style="{StaticResource S_TextBox_Prop}" Text="{Binding OverrideName, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Regular_OverrideName}"></TextBox>
                    <TextBox Grid.Row="2" Style="{StaticResource S_TextBox_Prop}" Text="{Binding FileHttpRef, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Regular_FileHttpRef}"></TextBox>
                    <TextBox Grid.Row="3" Style="{StaticResource S_TextBox_Prop_Rich}" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Alternative_Description}"></TextBox>
                    <TextBox Grid.Row="4" Style="{StaticResource S_TextBox_Prop_Multiline}" Text="{Binding ShortDescription, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Regular_ShortDescription}"></TextBox>
                </Grid>
            </TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_Predicates}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_PredicatesHeader}" Header="{Binding}"></TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_GameEvents}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_GameEventsHeader}" Header="{Binding}"></TabItem>
        </TabControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_DialogVM}">
        <Border Style="{StaticResource S_Border_Node}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>

                <Label Content="{StaticResource String_Icon_Node_Dialog}" Style="{StaticResource S_Label_Node}"></Label>

                <TextBlock x:Name="tb_CharacterName" VerticalAlignment="Center" TextAlignment="Center" Grid.Column="1" Grid.Row="0" Style="{StaticResource S_TextBlock_Node_Header}" Text="{Binding Character.name, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"></TextBlock>
                <TextBlock x:Name="tb_OverrideName" VerticalAlignment="Center" TextAlignment="Center" Grid.Column="1" Grid.Row="0" Style="{StaticResource S_TextBlock_Node_Header}" Text="{Binding OverrideName, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <controls:TextBlockExt IsHitTestVisible="False" Grid.ColumnSpan="2" Grid.Row="1" Document="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
                                       Style="{StaticResource S_TextBlock_Node_Description}"></controls:TextBlockExt>

                <Separator Grid.ColumnSpan="2" Grid.Row="2"></Separator>

                <TextBlock Grid.ColumnSpan="2" Grid.Row="3" Style="{StaticResource S_TextBlock_Node_ShortDescription}" Text="{Binding ShortDescription, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                <Button Style="{StaticResource S_Button_Node_Gender}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Left"></Button>

                <Button Style="{StaticResource S_Button_Node_Remove}" Grid.ColumnSpan="2" Grid.RowSpan="3" VerticalAlignment="Top" HorizontalAlignment="Right"></Button>
            </Grid>
        </Border>
        <DataTemplate.Triggers>
            <Trigger SourceName="tb_OverrideName" Property="Text" Value="">
                <Setter TargetName="tb_OverrideName" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="tb_CharacterName" Property="Visibility" Value="Visible"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:Node_DialogEditorVM}">
        <TabControl>
            <TabItem Header="{StaticResource String_Tag_Node_Tab_Props}">
                <Grid VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <controls:ComboBoxExt SelectedValue="{Binding Character, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Node_Regular_Character}"
                                          ItemsSource="{Binding FilteredCharacterCVS.View}"
                                          Filter="{Binding CharacterFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
                    <TextBox Grid.Row="1" Style="{StaticResource S_TextBox_Prop}" Text="{Binding OverrideName, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Regular_OverrideName}"></TextBox>
                    <TextBox Grid.Row="2" Style="{StaticResource S_TextBox_Prop}" Text="{Binding FileHttpRef, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Regular_FileHttpRef}"></TextBox>
                    <TextBox Grid.Row="3" Style="{StaticResource S_TextBox_Prop_Rich}" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Alternative_Description}"></TextBox>
                    <TextBox Grid.Row="4" Style="{StaticResource S_TextBox_Prop_Multiline}" Text="{Binding ShortDescription, UpdateSourceTrigger=PropertyChanged}" Tag="{StaticResource String_Tag_Node_Regular_ShortDescription}"></TextBox>
                </Grid>
            </TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_Predicates}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_PredicatesHeader}" Header="{Binding}"></TabItem>
            <TabItem ContentTemplate="{StaticResource DT_ContentControl_GameEvents}" Content="{Binding}" HeaderTemplate="{StaticResource DT_ContentControl_GameEventsHeader}" Header="{Binding}"></TabItem>
        </TabControl>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vmg:DialogVM}">
        <Border x:Name="br_Main" Style="{StaticResource S_Border_Selector}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
            </Border.InputBindings>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{StaticResource String_Icon_Dialog}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource S_TextBlock_Selector_Cut}"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmg:DialogEditorVM}">
        <TabControl Padding="0" Margin="0">
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_View}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="7*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="3*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ItemsControl Style="{StaticResource S_Canvas_Graph}"
                                  bhvrs:RenderSizeBehavior.IsEnabled="true"
                                  bhvrs:RenderSizeBehavior.ActualWidth="{Binding Path=(vm:StorylineVM.ViewWidth), UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                                  bhvrs:RenderSizeBehavior.ActualHeight="{Binding Path=(vm:StorylineVM.ViewHeight), UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                                  bhvrs:RenderSizeBehavior.SizeChangedFlag="{Binding SizeChangedFlag, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}">
                    </ItemsControl>

                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="btn_selectable_Dialog" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Dialog}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_DialogM}"></Button>
                            <Button x:Name="btn_selectable_Replica" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Replica}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_ReplicaM}"></Button>
                            <Button x:Name="btn_selectable_Random" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Random}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_RandomM}"></Button>
                            <Button x:Name="btn_selectable_Transit" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Transit}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_TransitM}"></Button>
                            <Button x:Name="btn_selectable_Gate" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Gate}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_GateM}"></Button>
                            <Button x:Name="btn_selectable_Exit" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Exit}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_ExitM}"></Button>
                            <Rectangle Style="{StaticResource S_Rectangle_GraphMenu}"></Rectangle>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="⏪" Command="{Binding PrevRootNodeCommand}" ToolTip="{StaticResource String_GraphMenu_PrevRootNode_Tooltip}"></Button>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="⏩" Command="{Binding NextRootNodeCommand}" ToolTip="{StaticResource String_GraphMenu_NextRootNode_Tooltip}"></Button>
                            <Rectangle Style="{StaticResource S_Rectangle_GraphMenu}"></Rectangle>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Graph_Origin}" Command="{Binding GoToOriginCommand}" ToolTip="{StaticResource String_GraphMenu_GoToOrigin_Tooltip}"></Button>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Graph_Reset}" Command="{Binding ResetScaleCommand}" ToolTip="{StaticResource String_GraphMenu_ResetScale_Tooltip}"></Button>
                        </StackPanel>

                        <TextBlock Grid.Row="1" Style="{StaticResource S_TextBlock_Graph_Bold}" Margin="{StaticResource Thickness_Margin_2x}">
                            <Run x:Name="r_SelectedNodeType"></Run>
                            <Run Text="{Binding Scale, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></Run>
                            <Run Text="("></Run>
                            <Run Text="{Binding OffsetX, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}"></Run>
                            <Run Text=","></Run>
                            <Run Text="{Binding OffsetY, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}"></Run>
                            <Run Text=")"></Run>
                        </TextBlock>
                    </Grid>

                    <ContentControl Content="{Binding}" HorizontalAlignment="Right" VerticalAlignment="Top" Template="{StaticResource CT_ContentControl_NodePosition}"></ContentControl>

                    <GridSplitter Grid.Column="1"></GridSplitter>

                    <ContentControl Grid.Column="2" Content="{Binding SelectionEditor, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
                </Grid>
            </TabItem>
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_Props}">
                <StackPanel Orientation="Vertical">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_Name}"></TextBox>
                    <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop_Multiline}" Tag="{StaticResource String_Tag_Description}"></TextBox>
                    <controls:ComboBoxExt SelectedValue="{Binding DialogCharacter, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Dialog_DialogCharacter}"
                                          ItemsSource="{Binding FilteredDialogCharacterCVS.View}"
                                          Filter="{Binding DialogCharacterFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
                </StackPanel>
            </TabItem>
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_Stats}"></TabItem>
        </TabControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_DialogM}">
                <Setter TargetName="btn_selectable_Dialog" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Dialog_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_ReplicaM}">
                <Setter TargetName="btn_selectable_Replica" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Replica_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_RandomM}">
                <Setter TargetName="btn_selectable_Random" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Random_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_TransitM}">
                <Setter TargetName="btn_selectable_Transit" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Transit_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_GateM}">
                <Setter TargetName="btn_selectable_Gate" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Gate_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_ExitM}">
                <Setter TargetName="btn_selectable_Exit" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Exit_Type}"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmg:ReplicaVM}">
        <Border x:Name="br_Main" Style="{StaticResource S_Border_Selector}"
                    bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                    bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Border.InputBindings>
                <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.SelectCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
            </Border.InputBindings>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{StaticResource String_Icon_Replica}" Style="{StaticResource S_TextBlock_Selector_Icon}"></TextBlock>
                <TextBlock Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Selector_Name}"></TextBlock>
                <TextBlock Grid.Column="2" Style="{StaticResource S_TextBlock_Selector_Cut}"></TextBlock>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmg:ReplicaEditorVM}">
        <TabControl Padding="0" Margin="0">
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_View}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="7*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="3*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <ItemsControl Style="{StaticResource S_Canvas_Graph}"
                                  bhvrs:RenderSizeBehavior.IsEnabled="true"
                                  bhvrs:RenderSizeBehavior.ActualWidth="{Binding Path=(vm:StorylineVM.ViewWidth), UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                                  bhvrs:RenderSizeBehavior.ActualHeight="{Binding Path=(vm:StorylineVM.ViewHeight), UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                                  bhvrs:RenderSizeBehavior.SizeChangedFlag="{Binding SizeChangedFlag, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}">
                    </ItemsControl>

                    <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>

                        <StackPanel Orientation="Horizontal">
                            <Button x:Name="btn_selectable_Replica" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Replica}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_ReplicaM}"></Button>
                            <Button x:Name="btn_selectable_Random" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Random}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_RandomM}"></Button>
                            <Button x:Name="btn_selectable_Transit" Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Node_Transit}" Command="{Binding SelectNodeTypeCommand}" CommandParameter="{x:Type mn:Node_TransitM}"></Button>
                            <Rectangle Style="{StaticResource S_Rectangle_GraphMenu}"></Rectangle>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="⏪" Command="{Binding PrevRootNodeCommand}" ToolTip="{StaticResource String_GraphMenu_PrevRootNode_Tooltip}"></Button>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="⏩" Command="{Binding NextRootNodeCommand}" ToolTip="{StaticResource String_GraphMenu_NextRootNode_Tooltip}"></Button>
                            <Rectangle Style="{StaticResource S_Rectangle_GraphMenu}"></Rectangle>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Graph_Origin}" Command="{Binding GoToOriginCommand}" ToolTip="{StaticResource String_GraphMenu_GoToOrigin_Tooltip}"></Button>
                            <Button Style="{StaticResource S_Button_Square_24x}" Content="{StaticResource String_Icon_Graph_Reset}" Command="{Binding ResetScaleCommand}" ToolTip="{StaticResource String_GraphMenu_ResetScale_Tooltip}"></Button>
                        </StackPanel>

                        <TextBlock Grid.Row="1" Style="{StaticResource S_TextBlock_Graph_Bold}" Margin="{StaticResource Thickness_Margin_2x}">
                            <Run x:Name="r_SelectedNodeType"></Run>
                            <Run Text="{Binding Scale, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></Run>
                            <Run Text="("></Run>
                            <Run Text="{Binding OffsetX, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}"></Run>
                            <Run Text=","></Run>
                            <Run Text="{Binding OffsetY, UpdateSourceTrigger=PropertyChanged, StringFormat=N0}"></Run>
                            <Run Text=")"></Run>
                        </TextBlock>
                    </Grid>

                    <ContentControl Content="{Binding}" HorizontalAlignment="Right" VerticalAlignment="Top" Template="{StaticResource CT_ContentControl_NodePosition}"></ContentControl>

                    <GridSplitter Grid.Column="1"></GridSplitter>

                    <ContentControl Grid.Column="2" Content="{Binding SelectionEditor, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
                </Grid>
            </TabItem>
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_Props}">
                <StackPanel Orientation="Vertical">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop}" Tag="{StaticResource String_Tag_Name}"></TextBox>
                    <TextBox Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBox_Prop_Multiline}" Tag="{StaticResource String_Tag_Description}"></TextBox>
                </StackPanel>
            </TabItem>
            <TabItem Header="{StaticResource String_Tag_Graph_Tab_Stats}"></TabItem>
        </TabControl>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_ReplicaM}">
                <Setter TargetName="btn_selectable_Replica" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Replica_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_RandomM}">
                <Setter TargetName="btn_selectable_Random" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Random_Type}"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding SelectedNodeType, UpdateSourceTrigger=PropertyChanged}" Value="{x:Type mn:Node_TransitM}">
                <Setter TargetName="btn_selectable_Transit" Property="Style" Value="{StaticResource S_Button_24x_Selected}"></Setter>
                <Setter TargetName="r_SelectedNodeType" Property="Text" Value="{StaticResource String_Tag_Node_Transit_Type}"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:PreviewLinkVM}">
        <Grid 
                  bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                  bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Polygon x:Name="pg_Main" IsHitTestVisible="False" Points="{Binding StepPoints}" Stroke="{StaticResource Color_PreviewLink_Disallow}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" Fill="{StaticResource Color_PreviewLink_Disallow}"></Polygon>
            <Polygon x:Name="pg_Indicator" IsHitTestVisible="False" Points="{Binding RemovePoints}" Stroke="{StaticResource Color_Link_Foreground}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" Fill="{StaticResource Color_PreviewLink_Disallow}"></Polygon>
            <!--Here two Polyline are used just for one Cross because of WPF render bug check -->
            <Line x:Name="ln_1" IsHitTestVisible="False" X1="{Binding Cross1_X1, UpdateSourceTrigger=PropertyChanged}" Y1="{Binding Cross1_Y1, UpdateSourceTrigger=PropertyChanged}"
                      X2="{Binding Cross1_X2, UpdateSourceTrigger=PropertyChanged}" Y2="{Binding Cross1_Y2, UpdateSourceTrigger=PropertyChanged}"
                      Stroke="{StaticResource Color_Link_Foreground}" StrokeThickness="{Binding CrossStrokeThickness, UpdateSourceTrigger=PropertyChanged}"></Line>
            <Line x:Name="ln_2" IsHitTestVisible="False" X1="{Binding Cross2_X1, UpdateSourceTrigger=PropertyChanged}" Y1="{Binding Cross2_Y1, UpdateSourceTrigger=PropertyChanged}"
                      X2="{Binding Cross2_X2, UpdateSourceTrigger=PropertyChanged}" Y2="{Binding Cross2_Y2, UpdateSourceTrigger=PropertyChanged}"
                      Stroke="{StaticResource Color_Link_Foreground}" StrokeThickness="{Binding CrossStrokeThickness, UpdateSourceTrigger=PropertyChanged}"></Line>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                <Setter TargetName="pg_Main" Property="Stroke" Value="{StaticResource Color_PreviewLink}"></Setter>
                <Setter TargetName="pg_Main" Property="Fill" Value="{StaticResource Color_PreviewLink}"></Setter>
                <Setter TargetName="pg_Indicator" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="ln_1" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="ln_2" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Value="">
                <Setter TargetName="pg_Main" Property="Stroke" Value="{StaticResource Color_PreviewLink_Allow}"></Setter>
                <Setter TargetName="pg_Main" Property="Fill" Value="{StaticResource Color_PreviewLink_Allow}"></Setter>
                <Setter TargetName="pg_Indicator" Property="Visibility" Value="Visible"></Setter>
                <Setter TargetName="pg_Indicator" Property="Fill" Value="{StaticResource Color_PreviewLink_Allow}"></Setter>
                <Setter TargetName="ln_1" Property="Visibility" Value="Visible"></Setter>
                <Setter TargetName="ln_2" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:LinkVM}">
        <Grid 
                  bhvrs:LoadUnloadExtBehavior.LoadedCommand="{Binding RegisterCommand, UpdateSourceTrigger=PropertyChanged}"
                  bhvrs:LoadUnloadExtBehavior.UnloadedCommand="{Binding UnregisterCommand, UpdateSourceTrigger=PropertyChanged}">
            <Polygon IsHitTestVisible="False" Points="{Binding StepPoints}" Stroke="{StaticResource Color_Link}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" Fill="{StaticResource Color_Link}"></Polygon>
            <Polygon Points="{Binding RemovePoints}" Stroke="{StaticResource Color_Link_Foreground}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" 
                         Fill="{StaticResource Color_Remove}">
                <Polygon.InputBindings>
                    <MouseBinding Gesture="LeftClick" Command="{Binding Path=DataContext.RemoveElementCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}}" CommandParameter="{Binding}"></MouseBinding>
                </Polygon.InputBindings>
            </Polygon>
            <!--Here two Polyline are used just for one Cross because of WPF render bug check -->
            <Line IsHitTestVisible="False" X1="{Binding Cross1_X1, UpdateSourceTrigger=PropertyChanged}" Y1="{Binding Cross1_Y1, UpdateSourceTrigger=PropertyChanged}"
                      X2="{Binding Cross1_X2, UpdateSourceTrigger=PropertyChanged}" Y2="{Binding Cross1_Y2, UpdateSourceTrigger=PropertyChanged}"
                      Stroke="{StaticResource Color_Link_Foreground}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}"></Line>
            <Line IsHitTestVisible="False" X1="{Binding Cross2_X1, UpdateSourceTrigger=PropertyChanged}" Y1="{Binding Cross2_Y1, UpdateSourceTrigger=PropertyChanged}"
                      X2="{Binding Cross2_X2, UpdateSourceTrigger=PropertyChanged}" Y2="{Binding Cross2_Y2, UpdateSourceTrigger=PropertyChanged}"
                      Stroke="{StaticResource Color_Link_Foreground}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}"></Line>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmn:SelectionBoxVM}">
        <Grid>
            <Line IsHitTestVisible="False" X1="0" Y1="0"
                      X2="0" Y2="{Binding HandleY, UpdateSourceTrigger=PropertyChanged}"
                      Stroke="{StaticResource Color_Link}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" StrokeDashArray="4, 8"></Line>
            <Line IsHitTestVisible="False" X1="0" Y1="{Binding HandleY, UpdateSourceTrigger=PropertyChanged}"
                      X2="{Binding HandleX, UpdateSourceTrigger=PropertyChanged}" Y2="{Binding HandleY, UpdateSourceTrigger=PropertyChanged}"
                      Stroke="{StaticResource Color_Link}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" StrokeDashArray="4, 8"></Line>
            <Line IsHitTestVisible="False" X1="{Binding HandleX, UpdateSourceTrigger=PropertyChanged}" Y1="{Binding HandleY, UpdateSourceTrigger=PropertyChanged}"
                      X2="{Binding HandleX, UpdateSourceTrigger=PropertyChanged}" Y2="0"
                      Stroke="{StaticResource Color_Link}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" StrokeDashArray="4, 8"></Line>
            <Line IsHitTestVisible="False" X1="{Binding HandleX, UpdateSourceTrigger=PropertyChanged}" Y1="0"
                      X2="0" Y2="0"
                      Stroke="{StaticResource Color_Link}" StrokeThickness="{Binding StrokeThickness, UpdateSourceTrigger=PropertyChanged}" StrokeDashArray="4, 8"></Line>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DT_ComboBoxItem_DialogOrReplica">
        <TextBlock>
            <Run x:Name="r_Icon"></Run>
            <Run Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"></Run>
        </TextBlock>
        <DataTemplate.Triggers>
            
        </DataTemplate.Triggers>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vmp:P_Dialog_HasVM}">
        <controls:ComboBoxExt SelectedValue="{Binding DialogOrReplica, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_DialogOrReplica}"
                                          ItemsSource="{Binding DialogsAndReplicasCVS.View}"
                                          Filter="{Binding DialogsAndReplicasFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Dialog_Node_Has_PrevSessionsVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_DialogOrReplica" SelectedValue="{Binding DialogOrReplica, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_DialogOrReplica}"
                                          ItemsSource="{Binding DialogsAndReplicasCVS.View}"
                                          Filter="{Binding DialogsAndReplicasFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <controls:ComboBoxExt x:Name="cmb_Node" SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_DialogOrReplica" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="cmb_Node" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Dialog_Node_Has_ActiveSessionVM}">
        <controls:ComboBoxExt SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Dialog_Node_Has_PrevSessions_CmpVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_DialogOrReplica" SelectedValue="{Binding DialogOrReplica, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_DialogOrReplica}"
                                          ItemsSource="{Binding DialogsAndReplicasCVS.View}"
                                          Filter="{Binding DialogsAndReplicasFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <controls:ComboBoxExt x:Name="cmb_Node" SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <GroupBox x:Name="gb_Compare" Header="{StaticResource String_Tag_Predicate_Compare}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ContentControl Margin="{StaticResource Thickness_Margin_1x}" VerticalAlignment="Center" Content="{Binding}" Template="{StaticResource CT_ContentControl_Comparer_List}"></ContentControl>
                    <controls:NumericUpDown Margin="{StaticResource Thickness_Margin_1x}" Grid.Column="1" VerticalAlignment="Center" Value="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                                            ButtonIncStyle="{StaticResource S_Button_Square_Auto}" ButtonIncContent="{StaticResource String_Icon_Plus}"
                                            ButtonDecStyle="{StaticResource S_Button_Square_Auto}" ButtonDecContent="{StaticResource String_Icon_Minus}"
                                            MinValue="0" MaxValue="64" Step="1"></controls:NumericUpDown>
                </Grid>
            </GroupBox>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_DialogOrReplica" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="cmb_Node" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="gb_Compare" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
            <Trigger SourceName="cmb_Node" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="gb_Compare" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Dialog_Node_Has_ActiveSession_CmpVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_Node" SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <GroupBox x:Name="gb_Compare" Header="{StaticResource String_Tag_Predicate_Compare}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ContentControl Margin="{StaticResource Thickness_Margin_1x}" VerticalAlignment="Center" Content="{Binding}" Template="{StaticResource CT_ContentControl_Comparer_List}"></ContentControl>
                    <controls:NumericUpDown Margin="{StaticResource Thickness_Margin_1x}" Grid.Column="1" VerticalAlignment="Center" Value="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                                            ButtonIncStyle="{StaticResource S_Button_Square_Auto}" ButtonIncContent="{StaticResource String_Icon_Plus}"
                                            ButtonDecStyle="{StaticResource S_Button_Square_Auto}" ButtonDecContent="{StaticResource String_Icon_Minus}"
                                            MinValue="0" MaxValue="64" Step="1"></controls:NumericUpDown>
                </Grid>
            </GroupBox>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_Node" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="gb_Compare" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Item_HasVM}">
        <controls:ComboBoxExt SelectedValue="{Binding Item, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Item}"
                                          ItemsSource="{Binding ItemsCVS.View}"
                                          Filter="{Binding ItemsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Quest_AddedVM}">
        <controls:ComboBoxExt SelectedValue="{Binding Quest, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Quest}"
                                          ItemsSource="{Binding QuestsCVS.View}"
                                          Filter="{Binding QuestsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Quest_FinishedVM}">
        <controls:ComboBoxExt SelectedValue="{Binding Quest, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Quest}"
                                          ItemsSource="{Binding QuestsCVS.View}"
                                          Filter="{Binding QuestsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Relation_HasVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_Characters" SelectedValue="{Binding Character, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Character}"
                                          ItemsSource="{Binding CharactersCVS.View}"
                                          Filter="{Binding CharactersFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <GroupBox x:Name="gb_Compare" Header="{StaticResource String_Tag_Predicate_Compare}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ContentControl Margin="{StaticResource Thickness_Margin_1x}" VerticalAlignment="Center" Content="{Binding}" Template="{StaticResource CT_ContentControl_Comparer_List}"></ContentControl>
                    <controls:NumericUpDown_Float Margin="{StaticResource Thickness_Margin_1x}" Grid.Column="1" VerticalAlignment="Center" Value="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                                            ButtonIncStyle="{StaticResource S_Button_Square_Auto}" ButtonIncContent="{StaticResource String_Icon_Plus}"
                                            ButtonDecStyle="{StaticResource S_Button_Square_Auto}" ButtonDecContent="{StaticResource String_Icon_Minus}"
                                            MinValue="-10" MaxValue="10" Step="0.25"></controls:NumericUpDown_Float>
                </Grid>
            </GroupBox>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_Characters" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="gb_Compare" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Quest_Node_AddedVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_Quest" SelectedValue="{Binding Quest, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Quest}"
                                          ItemsSource="{Binding QuestsCVS.View}"
                                          Filter="{Binding QuestsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <controls:ComboBoxExt x:Name="cmb_Node" SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_Quest" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="cmb_Node" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_Quest_Node_PassedVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_Quest" SelectedValue="{Binding Quest, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Quest}"
                                          ItemsSource="{Binding QuestsCVS.View}"
                                          Filter="{Binding QuestsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <controls:ComboBoxExt x:Name="cmb_Node" SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_Quest" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="cmb_Node" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmp:P_CompositeVM}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Grid.Column="0" Content="{StaticResource String_Tag_Predicate_PredicateA}" Command="{Binding SelectCommand}" CommandParameter="{StaticResource True}"></Button>
            <ComboBox Grid.Row="0" Grid.Column="1" SelectedValue="{Binding CompositionType}" SelectedIndex="0" ItemTemplate="{StaticResource DT_ListBoxItem_CompositionType}">
                <x:Static Member="m:COMPOSITION_TYPE.AND"></x:Static>
                <x:Static Member="m:COMPOSITION_TYPE.OR"></x:Static>
                <x:Static Member="m:COMPOSITION_TYPE.XOR"></x:Static>
            </ComboBox>
            <Button Grid.Row="0" Grid.Column="2" Content="{StaticResource String_Tag_Predicate_PredicateB}" Command="{Binding SelectCommand}" CommandParameter="{StaticResource False}"></Button>

            <ComboBox x:Name="cmb_PredicateA" Grid.Row="1" Grid.ColumnSpan="3" SelectedValue="{Binding SubType, UpdateSourceTrigger=PropertyChanged}"
                      ItemTemplate="{StaticResource DT_ComboBoxItem_Predicate}">
                <system:Type>mp:P_CompositeM</system:Type>
                <system:Type>mp:P_Dialog_HasM</system:Type>
                <system:Type>mp:P_Dialog_Node_Has_ActiveSession_CmpM</system:Type>
                <system:Type>mp:P_Dialog_Node_Has_ActiveSessionM</system:Type>
                <system:Type>mp:P_Dialog_Node_Has_PrevSessions_CmpM</system:Type>
                <system:Type>mp:P_Dialog_Node_Has_PrevSessionsM</system:Type>
                <system:Type>mp:P_Item_HasM</system:Type>
                <system:Type>mp:P_Quest_AddedM</system:Type>
                <system:Type>mp:P_Quest_FinishedM</system:Type>
                <system:Type>mp:P_Quest_Node_AddedM</system:Type>
                <system:Type>mp:P_Quest_Node_PassedM</system:Type>
                <system:Type>mp:P_Relation_HasM</system:Type>
            </ComboBox>
            
            <Grid x:Name="gr_PredicateA" Grid.Row="2" Grid.ColumnSpan="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Tag="{Binding TypeA, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Predicate_Title}"></TextBlock>
                <ContentControl Grid.Row="1" Content="{Binding PredicateA, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
            </Grid>

            <Grid x:Name="gr_PredicateB" Grid.Row="2" Grid.ColumnSpan="3" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" Tag="{Binding TypeB, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Predicate_Title}"></TextBlock>
                <ContentControl Grid.Row="1" Content="{Binding PredicateB, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsFirstSelected, UpdateSourceTrigger=PropertyChanged}" Value="false">
                <Setter TargetName="gr_PredicateA" Property="Visibility" Value="Collapsed"></Setter>
                <Setter TargetName="gr_PredicateB" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmge:GE_Item_DropVM}">
        <controls:ComboBoxExt SelectedValue="{Binding Item, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Item}"
                                          ItemsSource="{Binding ItemsCVS.View}"
                                          Filter="{Binding ItemsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmge:GE_Item_PickUpVM}">
        <controls:ComboBoxExt SelectedValue="{Binding Item, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Item}"
                                          ItemsSource="{Binding ItemsCVS.View}"
                                          Filter="{Binding ItemsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmge:GE_Quest_AddVM}">
        <controls:ComboBoxExt SelectedValue="{Binding Quest, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Quest}"
                                          ItemsSource="{Binding QuestsCVS.View}"
                                          Filter="{Binding QuestsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmge:GE_Quest_Node_AddVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_Quest" SelectedValue="{Binding Quest, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Quest}"
                                          ItemsSource="{Binding QuestsCVS.View}"
                                          Filter="{Binding QuestsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <controls:ComboBoxExt x:Name="cmb_Node" SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_Quest" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="cmb_Node" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmge:GE_Quest_Node_PassVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_Quest" SelectedValue="{Binding Quest, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Quest}"
                                          ItemsSource="{Binding QuestsCVS.View}"
                                          Filter="{Binding QuestsFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <controls:ComboBoxExt x:Name="cmb_Node" SelectedValue="{Binding Node, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Node}"
                                          ItemsSource="{Binding NodesCVS.View}"
                                          Filter="{Binding NodesFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_Quest" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="cmb_Node" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vmge:GE_Relation_ChangeVM}">
        <StackPanel Orientation="Vertical">
            <controls:ComboBoxExt x:Name="cmb_Characters" SelectedValue="{Binding Character, UpdateSourceTrigger=PropertyChanged}"
                                          Tag="{StaticResource String_Tag_Predicate_Character}"
                                          ItemsSource="{Binding CharactersCVS.View}"
                                          Filter="{Binding CharactersFilter, UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource S_ComboBoxExt_Prop_Filter}"></controls:ComboBoxExt>
            <GroupBox x:Name="gb_Compare" Header="{StaticResource String_Tag_Predicate_Compare}" HeaderTemplate="{StaticResource DT_GroupBox_HeaderTemplate_Prop}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <ContentControl Margin="{StaticResource Thickness_Margin_1x}" VerticalAlignment="Center" Content="{Binding}" Template="{StaticResource CT_ContentControl_Comparer_List}"></ContentControl>
                    <controls:NumericUpDown_Float Margin="{StaticResource Thickness_Margin_1x}" Grid.Column="1" VerticalAlignment="Center" Value="{Binding Value, UpdateSourceTrigger=PropertyChanged}"
                                            ButtonIncStyle="{StaticResource S_Button_Square_Auto}" ButtonIncContent="{StaticResource String_Icon_Plus}"
                                            ButtonDecStyle="{StaticResource S_Button_Square_Auto}" ButtonDecContent="{StaticResource String_Icon_Minus}"
                                            MinValue="-20" MaxValue="20" Step="0.25"></controls:NumericUpDown_Float>
                </Grid>
            </GroupBox>
        </StackPanel>
        <DataTemplate.Triggers>
            <Trigger SourceName="cmb_Characters" Property="SelectedValue" Value="{x:Null}">
                <Setter TargetName="gb_Compare" Property="Visibility" Value="Collapsed"></Setter>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    
</ResourceDictionary>