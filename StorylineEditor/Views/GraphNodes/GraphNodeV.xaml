<!--
Этот файл — часть StorylineEditor.

StorylineEditor — свободная программа: вы можете перераспространять ее и/или изменять ее на условиях Стандартной общественной лицензии GNU в том виде, 
в каком она была опубликована Фондом свободного программного обеспечения; либо версии 3 лицензии, либо (по вашему выбору) любой более поздней версии.

StorylineEditor распространяется в надежде, что она будет полезной, но БЕЗО ВСЯКИХ ГАРАНТИЙ; даже без неявной гарантии ТОВАРНОГО ВИДА или ПРИГОДНОСТИ ДЛЯ 
ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Подробнее см. в Стандартной общественной лицензии GNU.

Вы должны были получить копию Стандартной общественной лицензии GNU вместе с этой программой. Если это не так, см. <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:StorylineEditor.Views.Controls">
    <ControlTemplate x:Key="GraphNode" TargetType="{x:Type local:GraphNode}">
        <ControlTemplate.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="GJNode_AlternativeV.xaml"></ResourceDictionary>
                    <ResourceDictionary Source="GJNode_StepV.xaml"></ResourceDictionary>
                    <ResourceDictionary Source="GJNode_BaseV.xaml"></ResourceDictionary>
                    <ResourceDictionary Source="GDNode_VirtualV.xaml"></ResourceDictionary>
                    <ResourceDictionary Source="GDNode_CharacterV.xaml"></ResourceDictionary>
                    <ResourceDictionary Source="GDNode_RandomV.xaml"></ResourceDictionary>
                    <ResourceDictionary Source="GDNode_TransitV.xaml"></ResourceDictionary>
                    <ResourceDictionary Source="GDNode_DialogV.xaml"></ResourceDictionary>
                </ResourceDictionary.MergedDictionaries>
            </ResourceDictionary>
        </ControlTemplate.Resources>

        <Grid Visibility="{Binding IsVisible, Converter={StaticResource collapseFalseConverter}}">
            <Ellipse Fill="Silver"  Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Top" HorizontalAlignment="Left">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="-16" Y="-16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse Fill="Silver" Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="-16" Y="16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse Fill="Silver" Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="16" Y="16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse Fill="Silver" Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="16" Y="-16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>

            <Border MinHeight="64" MinWidth="96" MaxHeight="256" MaxWidth="256" 
                    ToolTip="{Binding Id}" BorderThickness="3">
                <Border.Background>
                    <MultiBinding Converter="{StaticResource nodeToBackgroundConverter}">
                        <Binding Path="IsValid" Mode="OneWay"/>
                        <Binding Path="Owner" Mode="OneWay"/>
                    </MultiBinding>
                </Border.Background>
                <Border.BorderBrush>
                    <MultiBinding Converter="{StaticResource selectableToBrushConverter}">
                        <Binding Path="IsSelected" Mode="OneWay"/>
                    </MultiBinding>
                </Border.BorderBrush>
                <ContentControl Margin="0, 16, 0, 0" Grid.Row="0" Content="{Binding}"></ContentControl>
            </Border>

            <Button Style="{StaticResource S_Button_Node_ToggleGender}"></Button>

            <Button Style="{StaticResource S_Button_Node_Remove}"></Button>

            <ContentControl Name="cc_HasPredicates" Visibility="Collapsed" Style="{StaticResource S_ContentControl_P}"></ContentControl>

            <ContentControl Name="cc_HasEvents" Visibility="Collapsed" Style="{StaticResource S_ContentControl_GE}"></ContentControl>
        </Grid>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding HasPredicates, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter TargetName="cc_HasPredicates" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding HasEvents, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter TargetName="cc_HasEvents" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="GraphNodeDummy" TargetType="{x:Type local:GraphNode}">
        <Grid Visibility="{Binding IsVisible, Converter={StaticResource collapseFalseConverter}}">
            <Ellipse Fill="Silver"  Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Top" HorizontalAlignment="Left">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="-16" Y="-16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse Fill="Silver" Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Bottom" HorizontalAlignment="Left">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="-16" Y="16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse Fill="Silver" Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="16" Y="16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>
            <Ellipse Fill="Silver" Visibility="{Binding IsRoot, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource collapseFalseConverter}}"
                      Height="32" Width="32" VerticalAlignment="Top" HorizontalAlignment="Right">
                <Ellipse.RenderTransform>
                    <TranslateTransform X="16" Y="-16"></TranslateTransform>
                </Ellipse.RenderTransform>
            </Ellipse>

            <Border MinHeight="64" MinWidth="96" MaxHeight="256" MaxWidth="256" 
                    ToolTip="{Binding Id}" BorderThickness="3">
                <Border.Background>
                    <MultiBinding Converter="{StaticResource nodeToBackgroundConverter}">
                        <Binding Path="IsValid" Mode="OneWay"/>
                        <Binding Path="Owner" Mode="OneWay"/>
                    </MultiBinding>
                </Border.Background>
                <Border.BorderBrush>
                    <MultiBinding Converter="{StaticResource selectableToBrushConverter}">
                        <Binding Path="IsSelected" Mode="OneWay"/>
                    </MultiBinding>
                </Border.BorderBrush>
            </Border>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>