<!--
Этот файл — часть StorylineEditor.

StorylineEditor — свободная программа: вы можете перераспространять ее и/или изменять ее на условиях Стандартной общественной лицензии GNU в том виде, 
в каком она была опубликована Фондом свободного программного обеспечения; либо версии 3 лицензии, либо (по вашему выбору) любой более поздней версии.

StorylineEditor распространяется в надежде, что она будет полезной, но БЕЗО ВСЯКИХ ГАРАНТИЙ; даже без неявной гарантии ТОВАРНОГО ВИДА или ПРИГОДНОСТИ ДЛЯ 
ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Подробнее см. в Стандартной общественной лицензии GNU.

Вы должны были получить копию Стандартной общественной лицензии GNU вместе с этой программой. Если это не так, см. <https://www.gnu.org/licenses/>.
-->

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:draw="clr-namespace:System.Drawing;assembly=System.Drawing"
                    xmlns:viewModels="clr-namespace:StorylineEditor.ViewModels"
                    xmlns:viewModelsNodes="clr-namespace:StorylineEditor.ViewModels.Nodes" 
                    xmlns:local="clr-namespace:StorylineEditor.ViewModels.Tabs"
                    xmlns:viewsNodes="clr-namespace:StorylineEditor.Views.Nodes"
                    xmlns:controls="clr-namespace:StorylineEditor.Views.Controls"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">
    <DataTemplate DataType="{x:Type local:BaseTreesTabVm}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="7*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="3*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="auto"></RowDefinition>
                </Grid.RowDefinitions>

                <GroupBox HeaderTemplate="{StaticResource DT_Header_GroupBox_ActionPanel_Dialogs}">
                    <TreeView AllowDrop="true" Background="White" Name="tv_Items" ItemsSource="{Binding Items}"></TreeView>
                </GroupBox>

                <ContentControl Grid.Row="1" Padding="{StaticResource MarginPaddingThickness}" Margin="{StaticResource MarginPaddingThickness}" Content="{Binding ElementName=tc, Path=ActiveContext, UpdateSourceTrigger=PropertyChanged}">
                    <ContentControl.Resources>
                        <DataTemplate DataType="{x:Type viewModels:TreePlayerContext_ErrorVm}">
                            <StackPanel Margin="{StaticResource MarginPaddingThickness}">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Image VerticalAlignment="Center" Width="32" Height="32" Source="{Binding Source={x:Static draw:SystemIcons.Error}, Converter={StaticResource IconToImageSourceConverter}, Mode=OneWay}"/>
                                    <TextBlock VerticalAlignment="Center" Text="ОШИБКА" Style="{StaticResource S_TextBlock_HeaderBold}" Foreground="DarkRed"></TextBlock>
                                </StackPanel>
                                <TextBlock Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Base}" Foreground="DarkRed"></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:TreePlayerContext_ChoiceVm}">
                            <ScrollViewer x:Name="sv_Main">
                                <ItemsControl ItemsSource="{Binding NodesToSelect}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button Margin="{StaticResource MarginPaddingThickness}" Padding="{StaticResource MarginPaddingThickness}"
                                            Command="{Binding ElementName=sv_Main, Path=DataContext.SelectNodeCommand}" CommandParameter="{Binding}"
                                            HorizontalContentAlignment="Stretch">
                                                <Grid ToolTip="{Binding Id}">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                                        <ColumnDefinition></ColumnDefinition>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="auto"></RowDefinition>
                                                        <RowDefinition Height="auto"></RowDefinition>
                                                    </Grid.RowDefinitions>

                                                    <Label FontSize="12" FontWeight="Normal" Style="{StaticResource S_Label_NodeType}"></Label>

                                                    <TextBlock Grid.Column="1" Grid.Row="0" FontWeight="Bold" Text="{Binding OwnerName, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Style="{StaticResource S_TextBlock_Base}"></TextBlock>

                                                    <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" viewsNodes:RTBHelper.Document="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Base}"></TextBlock>
                                                </Grid>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </ScrollViewer>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModels:TreePlayerContext_TransitionVm}">
                            <fa:ImageAwesome Icon="Cog" Width="32" Height="32" VerticalAlignment="Center" HorizontalAlignment="Center" Spin="True" SpinDuration="4" />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModelsNodes:DNode_TransitVm}">
                            <Label HorizontalAlignment="Center" Style="{StaticResource S_Label_NodeType}"></Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModelsNodes:DNode_RandomVm}">
                            <Label HorizontalAlignment="Center" Style="{StaticResource S_Label_NodeType}"></Label>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModelsNodes:DNode_CharacterVm}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Style="{StaticResource S_TextBlock_GNodeHeader}" Text="{Binding OwnerName, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                                <TextBlock Grid.Row="1" viewsNodes:RTBHelper.Document="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Base}"></TextBlock>

                                <Separator x:Name="sep_ShortDescription" Grid.Row="2" Visibility="Collapsed"></Separator>

                                <TextBlock x:Name="tb_ShortDescription" Grid.Row="3" Style="{StaticResource S_TextBlock_GNodeDescriptionShort}" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"></TextBlock>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding OwnerId}" Value="{x:Static viewModels:CharacterVm.PlayerId}">
                                    <Setter TargetName="sep_ShortDescription" Property="Visibility" Value="Visible"></Setter>
                                    <Setter TargetName="tb_ShortDescription" Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type viewModelsNodes:DNode_DialogVm}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                    <RowDefinition Height="auto"></RowDefinition>
                                </Grid.RowDefinitions>

                                <TextBlock Grid.Row="0" Style="{StaticResource S_TextBlock_GNodeHeader}" Text="{Binding OwnerName, UpdateSourceTrigger=PropertyChanged}"></TextBlock>

                                <TextBlock Grid.Row="1" viewsNodes:RTBHelper.Document="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource S_TextBlock_Base}"></TextBlock>

                                <Separator x:Name="sep_ShortDescription" Grid.Row="2" Visibility="Collapsed"></Separator>

                                <TextBlock x:Name="tb_ShortDescription" Grid.Row="3" Style="{StaticResource S_TextBlock_GNodeDescriptionShort}" Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" Visibility="Collapsed"></TextBlock>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding OwnerId}" Value="{x:Static viewModels:CharacterVm.PlayerId}">
                                    <Setter TargetName="sep_ShortDescription" Property="Visibility" Value="Visible"></Setter>
                                    <Setter TargetName="tb_ShortDescription" Property="Visibility" Value="Visible"></Setter>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ContentControl.Resources>
                </ContentControl>

                <StackPanel Grid.Row="2" Orientation="Horizontal" DockPanel.Dock="Bottom">
                    <xctk:IntegerUpDown Padding="{StaticResource MarginPaddingThickness}" Margin="{StaticResource MarginPaddingThickness}" FontSize="10" Minimum="1" MinWidth="64" Maximum="60" Value="{Binding ElementName=tc, Path=StateDuration, UpdateSourceTrigger=PropertyChanged}" AllowTextInput="False"></xctk:IntegerUpDown>
                    <Button Style="{StaticResource S_Button_Player_Play}"></Button>
                    <Button Style="{StaticResource S_Button_Player_Stop}"></Button>
                    <Button Style="{StaticResource S_Button_Player_ToggleGenderToPlay}"></Button>
                    <Button Style="{StaticResource S_Button_Player_ToggleLock}"></Button>
                </StackPanel>                
            </Grid>
            
            <GridSplitter Grid.Column="1"></GridSplitter>

            <controls:TreeCanvas x:Name="tc" Snapping="10, 10" Grid.Column="2" ClipToBounds="True" Tree="{Binding ElementName=tv_Items, Path=SelectedValue, UpdateSourceTrigger=PropertyChanged}" Background="Gray"></controls:TreeCanvas>

            <StackPanel Name="sp_Actions" Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Left">
                <StackPanel Orientation="Horizontal">
                    <ItemsControl Name="ic_nodeTypes" ItemsSource="{Binding NodeTypes, UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" IsItemsHost="True"></WrapPanel>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource S_Button_CanvasPanel}" ToolTip="{Binding Converter={StaticResource typeToDescriptionConverter}}"
                                Content="{Binding Converter={StaticResource typeToIconConverter}}"
                                Command="{Binding ElementName=ic_nodeTypes, Path=DataContext.SelectNodeTypeCommand}" CommandParameter="{Binding}">
                                    <Button.Background>
                                        <MultiBinding Converter="{StaticResource selectableToBrushConverter}">
                                            <Binding RelativeSource="{RelativeSource self}" Path="DataContext" Mode="OneWay" />
                                            <Binding ElementName="ic_nodeTypes" Path="DataContext.SelectedNodeType" Mode="OneWay"/>
                                        </MultiBinding>
                                    </Button.Background>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <Rectangle Fill="Black" Width="0.5" Margin="2 0 2 0" VerticalAlignment="Stretch"></Rectangle>

                    <Button Style="{StaticResource S_Button_PrevRoot}"></Button>

                    <Button Style="{StaticResource S_Button_NextRoot}"></Button>

                    <Rectangle Fill="Black" Width="0.5" Margin="2 0 2 0" VerticalAlignment="Stretch"></Rectangle>

                    <Button Style="{StaticResource S_Button_ResetScale}"></Button>

                    <TextBlock VerticalAlignment="Top" MinWidth="64" Style="{StaticResource S_TextBlock_GNodeDescriptionShort}">
                        <Run Text="{Binding Scale, ElementName=tc, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></Run>
                        <Run> (</Run>
                        <Run Text="{Binding ElementName=tc, Path=TranslationX, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></Run>
                        <Run>, </Run>
                        <Run Text="{Binding ElementName=tc, Path=TranslationY, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></Run>
                        <Run>)</Run>
                    </TextBlock>
                    
                </StackPanel>
                <TextBlock Text="{Binding SelectedNodeType, Converter={StaticResource typeToDescriptionConverter}}" Style="{StaticResource S_TextBlock_GNodeDescriptionShort}"></TextBlock>                
            </StackPanel>

            <StackPanel Name="sp_Coords" Orientation="Horizontal" Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Right">
                <TextBox MinWidth="64" Style="{StaticResource S_TextBox_Input}" Text="{Binding ElementName=tc, Path=SelectedValue.PositionX, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></TextBox>
                <TextBox MinWidth="64" Style="{StaticResource S_TextBox_Input}" Text="{Binding ElementName=tc, Path=SelectedValue.PositionY, UpdateSourceTrigger=PropertyChanged, StringFormat=N2}"></TextBox>
            </StackPanel>

            <GridSplitter Grid.Column="3"></GridSplitter>

            <ContentControl Grid.Column="4" Content="{Binding ElementName=tc, Path=SelectedValue, UpdateSourceTrigger=PropertyChanged}"></ContentControl>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding ElementName=tc, Path=SelectedValue, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                <Setter TargetName="sp_Coords" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding ElementName=tv_Items, Path=SelectedValue, UpdateSourceTrigger=PropertyChanged}" Value="{x:Null}">
                <Setter TargetName="sp_Actions" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding ElementName=tv_Items, Path=SelectedValue.IsFolder, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter TargetName="sp_Actions" Property="Visibility" Value="Collapsed"></Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsDragOver, UpdateSourceTrigger=PropertyChanged}" Value="true">
                <Setter TargetName="tv_Items"  Property="Background" Value="LightGreen"></Setter>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
</ResourceDictionary>